name: Release

on:
  push:
    tags:
      - "v*.*.*" # This triggers the workflow for version tags

jobs:
  release:
    name: Create Release and Build
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository with the correct branch reference
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch full history to avoid detached HEAD issues
          ref: ${{ github.ref }} # Checkout the exact tag that triggered the workflow

      # Set up Rust environment
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      # Install cargo-release for managing release creation
      - name: Install cargo-release
        run: cargo install cargo-release

      # Create GitHub release without tagging or pushing (since the tag already exists)
      - name: Create GitHub Release
        run: cargo release --no-publish --no-tag --no-push

  build:
    name: Build for Multiple Platforms
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      # Checkout the repository with the correct branch reference
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch full history to avoid detached HEAD issues
          ref: ${{ github.ref }}

      # Set up Rust environment
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      # Build the project for each platform
      - name: Build
        run: cargo build --release

      # Archive the binaries (optional, but useful for release assets)
      - name: Archive binary
        run: |
          zip -j binary-${{ matrix.platform }} target/release/prepare_dump_for_local

      # Upload the binary as an artifact
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: binary-${{ matrix.platform }}
          path: binary-${{ matrix.platform }}.zip
